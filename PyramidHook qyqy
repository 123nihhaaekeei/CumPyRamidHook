-- do not change this or script wont work
getgenv()._ = " PyramidHook YOU BOUGHT THIS YOU GOT SCAMMED /                      https://discord.gg/PyramidHook"

-- Anti-tamper validation
local expectedString = " PyramidHook YOU BOUGHT THIS YOU GOT SCAMMED /                      https://discord.gg/PyramidHook"

if not getgenv()._ or getgenv()._ ~= expectedString then
    game.Players.LocalPlayer:Kick("bros tampering with the table LOL SKID")
    return
end


-- sigma.gg
loadstring([[    
    function LPH_NO_VIRTUALIZE(f) return f end;
]])();

local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local MainEvent = ReplicatedStorage:FindFirstChild("MainEvent")

getgenv().sigma = {
    Settings = {
        Prediction = 0.04,
        JumpOffSet = 0.06,
        Resolver = false,
        AimPart = "Head",
        Misc = {
            AutoReload = true,
            AutoClicker = false,
            ForceHit = true,
            Whitelist = {
                UserWhitelist = false,
                HwidWhitelist = false
            },
            AdvancedMisc = {
                Desync = false,
                AutoShoot = false,
                AutoToxic = false
            }
        },
        Premium = {
            BlackList = false
        },
        AutoKick = {
            Kick = false
        },
        Important = {
            LookAt = false
        },
        AutoAir = {
            AutoAir = false,
            Delay = 0.1
        },
        AntiGroundShots = false
    }
}

local enabled = true
local currentTarget = nil  -- Holds the current locked target

-- Find the nearest enemy
local function findNearestEnemy()
    local ClosestDistance, ClosestPlayer, ClosestPart = math.huge, nil, nil
    for _, Player in pairs(Players:GetPlayers()) do
        if Player ~= LocalPlayer and Player.Character then
            local Character = Player.Character
            local Humanoid = Character:FindFirstChild("Humanoid")
            local AimPart = Character:FindFirstChild(getgenv().sigma.Settings.AimPart)
            
            if Humanoid and Humanoid.Health > 0 and AimPart then
                local Distance = (LocalPlayer.Character[getgenv().sigma.Settings.AimPart].Position - AimPart.Position).Magnitude
                if Distance < ClosestDistance then
                    ClosestPlayer = Player
                    ClosestPart = AimPart
                    ClosestDistance = Distance
                end
            end
        end
    end
    return ClosestPlayer, ClosestPart
end

-- Function to highlight a player
local function highlight(plr)
    if plr and plr.Character then
        for _, obj in pairs(plr.Character:GetChildren()) do
            if obj:IsA("Highlight") then
                obj:Destroy()
            end
        end
        local highlight = Instance.new("Highlight")
        highlight.Parent = plr.Character
        highlight.FillColor = Color3.new(1, 1, 1)
        highlight.OutlineColor = Color3.new(1, 1, 1)
        highlight.FillTransparency = 0.6
        highlight.OutlineTransparency = 0
    end
end

-- Function to create a tracer (visual line)
local function createTracer(plr)
    if plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
        local tracer = Instance.new("Beam")
        tracer.Parent = plr.Character
        tracer.FaceCamera = true
        tracer.Color = ColorSequence.new(Color3.new(1, 1, 1))
        tracer.Width0 = 0.1
        tracer.Width1 = 0.1
        local attachment0 = Instance.new("Attachment", LocalPlayer.Character.HumanoidRootPart)
        local attachment1 = Instance.new("Attachment", plr.Character.HumanoidRootPart)
        tracer.Attachment0 = attachment0
        tracer.Attachment1 = attachment1
    end
end

-- Create GUI elements
local sigmaGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local Ui2corner = Instance.new("UICorner")

sigmaGui.Name = "sigmaGui"
sigmaGui.Parent = CoreGui
sigmaGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
sigmaGui.ResetOnSpawn = false

ImageButton.Name = "ImageButton"
ImageButton.Parent = sigmaGui
ImageButton.Active = true
ImageButton.Draggable = true
ImageButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ImageButton.BackgroundTransparency = 0.35
ImageButton.Size = UDim2.new(0, 90, 0, 90)
ImageButton.Image = "rbxassetid://76089272979991"
ImageButton.Position = UDim2.new(0.5, -45, 0.5, -45)

Ui2corner.CornerRadius = UDim.new(0.2, 0)
Ui2corner.Parent = ImageButton

-- Toggle lock and aim at a player
ImageButton.MouseButton1Click:Connect(function()
    enabled = not enabled
    if enabled then
        ImageButton.Image = "rbxassetid://76089272979991"
        -- Lock onto the nearest enemy if not already locked
        if not currentTarget then
            currentTarget, ClosestPart = findNearestEnemy()
            highlight(currentTarget)
            createTracer(currentTarget)
        end
    else
        ImageButton.Image = "rbxassetid://76089272979991"
        -- Clear the lock
        if currentTarget and currentTarget.Character then
            for _, obj in pairs(currentTarget.Character:GetChildren()) do
                if obj:IsA("Highlight") or obj:IsA("Beam") then
                    obj:Destroy()
                end
            end
        end
        currentTarget = nil
    end
end)

-- Constantly update aim if locked on a target
RunService.Heartbeat:Connect(function()
    if enabled and currentTarget and currentTarget.Character then
        local ClosestPart = currentTarget.Character:FindFirstChild(getgenv().sigma.Settings.AimPart)
        if ClosestPart then
            -- You can apply prediction or aim directly at the locked target here
            local TargetPosition = ClosestPart.Position + (currentTarget.Character.Head.Velocity * getgenv().sigma.Settings.Prediction)
            -- Set the mouse position or aim at the locked target
            game:GetService("UserInputService").MouseDelta = TargetPosition - game:GetService("Players").LocalPlayer.Character.Head.Position
        end
    end
end)

-- Auto-hit logic (only when locked onto a target)
RunService.RenderStepped:Connect(function()
    if getgenv().sigma.Settings.Misc.ForceHit then
        if enabled and currentTarget and currentTarget.Character then
            local ClosestPart = currentTarget.Character:FindFirstChild(getgenv().sigma.Settings.AimPart)

            if ClosestPart then
                local HasTool = false
                for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
                    if item:IsA("Tool") then
                        HasTool = true
                        break
                    end
                end

                if not HasTool then return end

                local AimPart = ClosestPart
                local AimChar = AimPart and AimPart.Parent
                if AimChar then
                    local ForceField = AimChar:FindFirstChildOfClass("ForceField")
                    if not ForceField then
                        if AimPart and MainEvent then
                            local args = {
                                "Shoot",
                                {
                                    {
                                        [1] = {
                                            ["Instance"] = AimPart,
                                            ["Normal"] = Vector3.new(0.9937344193458557, 0.10944880545139313, -0.022651424631476402),
                                            ["Position"] = Vector3.new(-141.78562927246094, 33.89368438720703, -365.6424865722656)
                                        },
                                        [2] = {
                                            ["Instance"] = AimPart,
                                            ["Normal"] = Vector3.new(0.9937344193458557, 0.10944880545139313, -0.022651424631476402),
                                            ["Position"] = Vector3.new(-141.78562927246094, 33.89368438720703, -365.6424865722656)
                                        },
                                        [3] = {
                                            ["Instance"] = AimPart,
                                            ["Normal"] = Vector3.new(0.9937343597412109, 0.10944879800081253, -0.022651422768831253),
                                            ["Position"] = AimPart.Position
                                        },
                                        [4] = {
                                            ["Instance"] = AimPart,
                                            ["Normal"] = Vector3.new(0.9937344193458557, 0.10944880545139313, -0.022651424631476402),
                                            ["Position"] = AimPart.Position
                                        },
                                        [5] = {
                                            ["Instance"] = AimPart,
                                            ["Normal"] = Vector3.new(0.9937344193458557, 0.10944880545139313, -0.022651424631476402),
                                            ["Position"] = Vector3.new(-141.79481506347656, 34.033607482910156, -365.369384765625)
                                        }
                                    },
                                    {
                                        [1] = {
                                            ["thePart"] = AimPart,
                                            ["theOffset"] = CFrame.new(0, 0, 0)
                                        },
                                        [2] = {
                                            ["thePart"] = AimPart,
                                            ["theOffset"] = CFrame.new(0, 0, 0)
                                        },
                                        [3] = {
                                            ["thePart"] = AimPart,
                                            ["theOffset"] = CFrame.new(0, 0, 0)
                                        },
                                        [4] = {
                                            ["thePart"] = AimPart,
                                            ["theOffset"] = CFrame.new(0, 0, 0)
                                        },
                                        [5] = {
                                            ["thePart"] = AimPart,
                                            ["theOffset"] = CFrame.new(0, 0, 0)
                                        }
                                    },
                                    Players.LocalPlayer.Character.Head.Position,
                                    Players.LocalPlayer.Character.Head.Position,
                                    workspace:GetServerTimeNow()
                                }
                            }

                            MainEvent:FireServer(unpack(args))
                        end
                    end
                end
            end
        end
    end
end)
